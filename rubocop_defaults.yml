require:
  - rubocop-rails
  - rubocop-rspec

AllCops:
  NewCops: enable
  TargetRubyVersion: 2.6
  TargetRailsVersion: 5.2.3
  Exclude:
    - 'db/schema.rb'
    - 'db/migrate/*'
    - 'lib/templates/**/*'
    - 'spec/dummy/db/schema.rb'
    - 'spec/dummy/db/migrate/*'
    - 'spec/dummy/lib/templates/**/*'

# Want to use even indentation for the various methods within a class, and
# also want to be able to indent private methods without errors
Layout/IndentationConsistency:
  EnforcedStyle: indented_internal_methods

# Commonly used screens these days easily fit more than 80 characters
Layout/LineLength:
  Max: 120
  Exclude:
    - 'spec/**/*_spec.rb'

# Must use a comparator for conditionals instead of an equals sign
Lint/AssignmentInCondition:
  AllowSafeAssignment: false

# Finds any cases of binding.pry or byebug left in the code
Lint/Debugger:
  Enabled: true

Lint/RaiseException:
  Enabled: true

Lint/StructNewOverride:
  Enabled: true

# Calculated by number of assignments, branches, and conditions within a method
# using this formula: http://c2.com/cgi/wiki?AbcMetric
Metrics/AbcSize:
  Max: 20

# Checks to see if the length of a block exceeds 25 lines
Metrics/BlockLength:
  Exclude:
    - 'spec/**/*_spec.rb'
    - 'config/routes.rb'
    - 'spec/dummy/config/routes.rb'

# The guiding principle of classes is SRP, SRP can't be accurately measured by LoC
Metrics/ClassLength:
  Max: 1500
  Exclude:
    - 'spec/**/*_spec.rb'

# Too short methods lead to extraction of single-use methods, which can make
# the code easier to read (by naming things), but can also clutter the class
Metrics/MethodLength:
  Max: 15

# This is unnecessary. Calling the argument `other` in all cases makes no sense
Naming/BinaryOperatorParameterName:
  Enabled: false

# Gives access to all the default 'enabled' rails-specific cops
Rails:
  Enabled: true

# allows the use of 'puts' instead of the logger on the seeds file only, and requires the logger for the
# rest of the project
Rails/Output:
  Enabled: true
  Exclude:
    - 'db/seeds.rb'

# This cop checks for the use of methods which skip validations which are listed in guides.rubyonrails.org/active_record_validations.html#skipping-validations
Rails/SkipsModelValidations:
  Enabled: true
  Exclude:
    - 'spec/**/*_spec.rb'

# Check for uses of braces around single-line blocks, and also for multi-line blocks with an
# attached method like: {...}.where
# It will still preferentially choose do/end for multi-line blocks
Style/BlockDelimiters:
  Enabled: true
  EnforcedStyle: braces_for_chaining

# has_key? and has_value? are far more readable than key? and value? so this allows both
# of those formats to be used
Style/PreferredHashMethods:
  Enabled: false

# This requires the use of top-level documentation for all classes and modules when enabled
Style/Documentation:
  Enabled: false

# This cop is designed to help upgrade to Ruby 3.0. It is enabled by default, and adds the
# comment: # frozen_string_literal: true to the top of files to enable frozen string literals
Style/FrozenStringLiteralComment:
  Enabled: false

# https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/HashEachMethods
Style/HashEachMethods:
  Enabled: true

# https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/HashTransformKeys
Style/HashTransformKeys:
  Enabled: true

# https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/HashTransformValues
Style/HashTransformValues:
  Enabled: true

# Don't use parentheses around the condition of a control expression. And if there's an expression
# wrapped in parentheses, this will recommend that it be moved to another method
Style/ParenthesesAroundCondition:
  AllowSafeAssignment: false

# Fail is an alias of raise. Avoid aliases, it's more cognitive load for no gain.
Style/SignalException:
  EnforcedStyle: only_raise

RSpec/ExampleLength:
  Enabled: false

RSpec/MultipleExpectations:
  Enabled: false

RSpec/NestedGroups:
  Max: 5

RSpec/ExpectInHook:
  Enabled: false

RSpec/AnyInstance:
  Enabled: false

RSpec/MessageSpies:
  Enabled: false

RSpec/VerifiedDoubles:
  Enabled: false

Rails/HttpPositionalArguments:
  Exclude:
    # this just doesn't seem right for things like 'on: :member'
    - 'spec/dummy/config/routes.rb'
    - 'config/routes.rb'
